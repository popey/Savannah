# Generated by Django 3.2.25 on 2025-04-13 13:03

from django.conf import settings
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('corm', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PublicDashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('page', models.CharField(choices=[('overview', 'Overview'), ('members', 'Members'), ('conversations', 'Conversations'), ('contributions', 'Contributions'), ('contributors', 'Contributors'), ('report', 'Report')], max_length=32)),
                ('display_name', models.CharField(default='', max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('view_count', models.PositiveBigIntegerField(default=0)),
                ('show_companies', models.BooleanField(default=False, help_text='Show company names.')),
                ('show_members', models.BooleanField(default=False, help_text='Show member names and affiliation (but not contact info).')),
                ('pin_time', models.BooleanField(default=False, help_text='Show data from the time the dashboard was shared, not the time it was viewed.')),
                ('filters', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corm.community')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('key', models.CharField(max_length=256)),
                ('expires', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ManagerInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('key', models.CharField(max_length=256)),
                ('expires', models.DateTimeField()),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corm.community')),
                ('invited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254)),
                ('category', models.CharField(max_length=128)),
                ('subject', models.CharField(max_length=128)),
                ('body', models.TextField(max_length=1024)),
                ('ok', models.BooleanField(default=True)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recv_messages_old', to='corm.member')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages_old', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
